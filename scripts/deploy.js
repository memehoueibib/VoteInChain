const { ethers } = require("hardhat");

async function main() {
  console.log("üöÄ D√©ploiement du contrat VoteInChain...");

  // Obtenir le d√©ployeur
  const [deployer] = await ethers.getSigners();
  console.log("üìù D√©ploiement avec le compte:", deployer.address);

  // V√©rifier le solde
  const balance = await deployer.provider.getBalance(deployer.address);
  console.log("üí∞ Solde du compte:", ethers.formatEther(balance), "ETH");

  // D√©ployer le contrat
  const VoteInChain = await ethers.getContractFactory("VoteInChain");
  
  console.log("‚è≥ D√©ploiement en cours...");
  const voteInChain = await VoteInChain.deploy();
  
  await voteInChain.waitForDeployment();
  const contractAddress = await voteInChain.getAddress();
  
  console.log("‚úÖ Contrat d√©ploy√© √† l'adresse:", contractAddress);

  // Ajouter les candidats
  console.log("üë• Ajout des candidats...");
  
  const candidates = [
    "Carolina HENAO URIBE",
    "Meme HOUEIBIB", 
    "Marwane ZAIM SASSI",
    "Mouad KARROUM",
    "Roa CHAIR",
    "Saad EL MATBAI",
    "Ismail BRAHIMI",
    "Fatima-Zohra BAKALI",
    "Enzo SEGHI",
    "Vladimir KREMNEV"
  ];

  for (let i = 0; i < candidates.length; i++) {
    const tx = await voteInChain.addCandidate(candidates[i]);
    await tx.wait();
    console.log(`‚úì Candidat ajout√©: ${candidates[i]}`);
  }

  // V√©rifier le d√©ploiement
  const candidateCount = await voteInChain.candidateCount();
  const votingActive = await voteInChain.votingActive();
  const admin = await voteInChain.admin();

  console.log("\nüìä Informations du contrat:");
  console.log("- Adresse:", contractAddress);
  console.log("- Nombre de candidats:", candidateCount.toString());
  console.log("- Vote actif:", votingActive);
  console.log("- Administrateur:", admin);

  // Sauvegarder les informations de d√©ploiement
  const deploymentInfo = {
    contractAddress,
    network: hre.network.name,
    deployer: deployer.address,
    blockNumber: await deployer.provider.getBlockNumber(),
    timestamp: new Date().toISOString(),
    candidates: candidates.length,
    gasUsed: "Estimation en cours..."
  };

  const fs = require('fs');
  fs.writeFileSync(
    'deployment-info.json', 
    JSON.stringify(deploymentInfo, null, 2)
  );

  console.log("\nüéâ D√©ploiement termin√© avec succ√®s!");
  console.log("üìÑ Informations sauvegard√©es dans deployment-info.json");
  
  // Instructions pour la v√©rification
  console.log("\nüîç Pour v√©rifier le contrat sur Etherscan:");
  console.log(`npx hardhat verify --network ${hre.network.name} ${contractAddress}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Erreur lors du d√©ploiement:", error);
    process.exit(1);
  });